{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sharepointonline_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sharepointonline"
    },
    "sharepointonline_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "George.Tarpeh@dev2.trade.gov"
    },
    "sharepointonline_1_token:TenantId": {
      "type": "string",
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application"
      }
    },
    "sql_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sql-1"
    },
    "sql_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Inta-dataloader-01 inta-sqla-01.database.windows.net"
    },
    "sql_1_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      }
    },
    "sql_1_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      }
    },
    "sql_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_1_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "southafricanorth",
        "southafricawest"
      ],
      "defaultValue": "eastus"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "standard-license-logicapp-01"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Get_items_from_sharepoint')?['value']",
              "actions": {
                "Condition": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "less": [
                          "@variables('LastFetchId')",
                          "@items('For_each')?['AccountId']"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Insert_row_(V2)": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['sql']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "Account_ID": "@items('For_each')?['AccountId']",
                          "ExpirationDate": "@items('For_each')?['ExpirationDate']",
                          "LicenseNumber": "@items('For_each')?['LicenseNumber']",
                          "ApplicationDate": "@items('For_each')?['ApplicationDate']",
                          "HTS_x0020_Code": "@items('For_each')?['HtsCode']",
                          "ValidFromDate": "@items('For_each')?['Title']",
                          "Title": "@items('For_each')?['Title']",
                          "LicenseStatus": "@body('Parse_License_status')?['Value']"
                        },
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[SIMA_STANDARD_STEEL_LICENSE]'))}/items"
                      },
                      "runAfter": {
                        "Parse_License_status": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Parse_License_status": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@items('For_each')?['LicenseStatus']",
                        "schema": {
                          "properties": {
                            "@@odata.type": {
                              "type": "string"
                            },
                            "Id": {
                              "type": "integer"
                            },
                            "Value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "runAfter": {
                        "Update_LastFetchId": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Update_LastFetchId": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "LastFetchId",
                        "value": "@int(items('For_each')?['AccountId'])"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Get_items_from_sharepoint": [
                  "Succeeded"
                ]
              }
            },
            "Get_Last_Time_Fetch_From_Sql": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('StandardLicensesTrackerId')))}"
              },
              "runAfter": {
                "Tracker_Id": [
                  "Succeeded"
                ]
              }
            },
            "Get_items_from_sharepoint": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/@{encodeURIComponent(encodeURIComponent('https://itadev2.sharepoint.com/sites/SIMAIntegration'))}/tables/@{encodeURIComponent(encodeURIComponent('f65e3e03-ed3b-41bd-997e-45f58be4114f'))}/items",
                "queries": {
                  "$filter": "AccountId gt @{variables('LastFetchId')}",
                  "view": "bb98b3d2-ff37-4809-9afc-c2ead64cdb0f"
                }
              },
              "runAfter": {
                "Last_Fetch_Id_From_Sql": [
                  "Succeeded"
                ]
              }
            },
            "Last_Fetch_Id_From_Sql": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "LastFetchId",
                    "type": "integer",
                    "value": "@int(body('Get_Last_Time_Fetch_From_Sql')?['TrackerValue'])"
                  }
                ]
              },
              "runAfter": {
                "Get_Last_Time_Fetch_From_Sql": [
                  "Succeeded"
                ]
              }
            },
            "Tracker_Id": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "StandardLicensesTrackerId",
                    "type": "string",
                    "value": "StandardLicense"
                  }
                ]
              },
              "runAfter": {
                "Execute_a_SQL_query_(V2)": [
                  "Succeeded"
                ]
              }
            },
            "Update_Tracker": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "patch",
                "body": {
                  "TrackerValue": "@{string(variables('LastFetchId'))}"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[TRACKER]'))}/items/@{encodeURIComponent(encodeURIComponent(variables('StandardLicensesTrackerId')))}"
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              }
            },
            "Execute_a_SQL_query_(V2)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "query": "IF OBJECT_ID(N'dbo.TRACKER', N'U') IS NULL\nBEGIN\n    CREATE TABLE TRACKER (\n\t\t[TrackerName] VARCHAR(255) PRIMARY KEY,\n\t\t[TrackerValue] VARCHAR(255)\n\t);\n\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('StandardLicense','0');\nEND\n\nIF OBJECT_ID(N'dbo.TRACKER', N'U') IS NOT NULL\nBEGIN\n\tIF NOT EXISTS (SELECT * FROM dbo.TRACKER WHERE TrackerName = N'StandardLicense')\n\tBEGIN\n\t\tINSERT INTO TRACKER(TrackerName,TrackerValue) VALUES ('StandardLicense','0');\n\tEND\nEND\n\nIF OBJECT_ID(N'dbo.SIMA_STANDARD_STEEL_LICENSE', N'U') IS NULL\nBEGIN\n\tCREATE TABLE SIMA_STANDARD_STEEL_LICENSE (\n\t[Account_ID] INTEGER,\n\t[ExpirationDate] DATE,\n\t[LicenseNumber] VARCHAR(255),\n\t[ApplicationDate] DATE,\n\t[HTS Code] VARCHAR(255),\n\t[ValidFromDate] DATE,\n\t[Title] VARCHAR(255),\n\t[JsonData] VARCHAR(MAX),\n\t[LicenseStatus] VARCHAR(255)\n\t);\nEND\n"
                },
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('inta-sqla-01.database.windows.net'))},@{encodeURIComponent(encodeURIComponent('Inta-dataloader-01'))}/query/sql"
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Day",
                "interval": 1,
                "startTime": "2020-05-01T00:00:00Z"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
                "connectionName": "[parameters('sql_1_Connection_Name')]"
              },
              "sharepointonline": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'sharepointonline')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sharepointonline_1_Connection_Name'))]",
                "connectionName": "[parameters('sharepointonline_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sharepointonline_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sharepointonline_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sharepointonline')]"
        },
        "displayName": "[parameters('sharepointonline_1_Connection_DisplayName')]",
        "nonSecretParameterValues": {
          "token:TenantId": "[parameters('sharepointonline_1_token:TenantId')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sql_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_1_server')]",
          "database": "[parameters('sql_1_database')]",
          "username": "[parameters('sql_1_username')]",
          "password": "[parameters('sql_1_password')]",
          "sqlConnectionString": "[parameters('sql_1_sqlConnectionString')]"
        }
      }
    }
  ],
  "outputs": {}
}